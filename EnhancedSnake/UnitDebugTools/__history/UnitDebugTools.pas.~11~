unit UnitDebugTools;

interface

uses
  Windows;

procedure ShowCurrentScreenBufferInfo; stdcall;
procedure DebugMenuInterface; stdcall;

implementation

uses UnitInterFace;

procedure ShowCurrentScreenBufferInfo;
begin
  GetHandle;
  GetCurrentScreenBufferInfo;
  writeln;
  writeln('Screen Buffer Size: ', ScreenBufferInfo.dwSize.X, ' ', ScreenBufferInfo.dwSize.Y);
  writeln('Maximum Size: ', ScreenBufferInfo.dwMaximumWindowSize.X, ' ', ScreenBufferInfo.dwMaximumWindowSize.Y);
  writeln('Window Rect: ', ScreenBufferInfo.srWindow.Left, ' ',ScreenBufferInfo.srWindow.Top, ' ', ScreenBufferInfo.srWindow.Right, ' ', ScreenBufferInfo.srWindow.Bottom);
  writeln('Largest Window Size: ', GetLargestConsoleWindowSize(hStdOut).X, ' ', GetLargestConsoleWindowSize(hStdOut).Y);
end;

procedure DebugMenuInterface;
var TextDifficulty, TextGameMode :string;
begin
  ClearScreen;
  case CurrDifficulty of
    difNone:   TextDifficulty := 'None.';
    difEasy:   TextDifficulty := 'Easy.';
    difMedium: TextDifficulty := 'Medium.';
    difHard:   TextDifficulty := 'Hard.';
  end;
  case CurrGameMode of
    gmNone:   TextGameMode := 'None.';
    gmSmall:  TextGameMode := 'Small.';
    gmNormal: TextGameMode := 'Normal.';
    gmLarge:  TextGameMode := 'Large.';
  end;
  writeln('Difficulty: ', TextDifficulty);
  writeln('GameMode: ', TextGameMode);
end;

end.
